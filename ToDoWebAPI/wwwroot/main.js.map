{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/to-do-app/to-do-app.component.html","./src/app/to-do-app/to-do-app.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'my-app';\n}","<app-to-do-app></app-to-do-app>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToDoAppComponent } from './to-do-app/to-do-app.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoAppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>ToDo</mat-label>\n    <input matInput [(ngModel)]=\"newToDo\" placeholder=\"What I need to do?\">\n  </mat-form-field>\n  <button mat-raised-button (click)=\"addToDoHandler()\" class=\"add-button\" color=\"primary\">Add</button>\n</div>\n<div *ngFor=\"let todo of todos\">\n  <mat-checkbox [(ngModel)]=\"todo.done\" (change)=\"updateTodoHandler(todo)\" class=\"example-margin\">\n    <span [class.active]=\"todo.done\">\n     {{todo.name}}\n    </span>\n  </mat-checkbox>\n</div>","import { TOUCH_BUFFER_MS } from '@angular/cdk/a11y';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do-app',\n  templateUrl: './to-do-app.component.html',\n  styleUrls: ['./to-do-app.component.css']\n})\nexport class ToDoAppComponent implements OnInit {\n  todos: ToDoItem[] = [];\n  newToDo = '';\n  private _http: HttpClient;\n\n  constructor(http: HttpClient) \n  { \n    this._http = http;\n  }\n\n  async ngOnInit() \n  {\n    this.todos = await this._http.get<ToDoItem[]>(\"/api/todo\").toPromise();\n  }\n\n  async addToDoHandler()\n  {\n    let newToDo: ToDoItem = new ToDoItem(this.newToDo);\n    let newToDoId: number = await this._http.post<number>(\"/api/todo\", newToDo).toPromise();\n    newToDo.id = newToDoId;\n    this.todos.push(newToDo);\n    this.newToDo = \"\";\n  }\n\n  async updateTodoHandler(todo: ToDoItem){\n    await this._http.put<void>(\"/api/todo/\" + todo.id, todo ).toPromise();\n  }\n}\n\nclass ToDoItem\n{\n  id: number;\n  name: string;\n  done: boolean;\n\n  constructor(name: string)\n  {\n    this.name = name;\n    this.done = false;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}